!function(){"use strict";class e{constructor(e){let{name:t,link:s,userId:r,_id:i,ownerId:n,isLiked:o,handleImageClick:a,handleDeleteClick:l,handleLikeClick:d,cardSelector:c}=e;this._name=t,this._link=s,this._userId=r,this._cardId=i,this._ownerId=n,this._isLiked=o,this._handleImageClick=a,this._handleDeleteClick=l,this._handleLikeClick=d,this._cardSelector=c,this._cardElement=this._getCardTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button")}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteClick(this)))}_renderLikes(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}setLikes(e){this._isLiked=e,this._renderLikes()}deleteCard(){this._cardElement.remove(),this._cardElement=null}_getCardTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}}class t{constructor(e,t){this._settings=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}hideModalInputError(){this._inputElements.forEach((e=>{e.classList.remove(this._inputErrorClass),this._form.querySelector(`#${e.id}-error`).classList.remove(this._errorClass)}))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}resetButtonState(){this._toggleButtonState()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const s=(document.querySelector("#card-template").content.querySelector(".card"),document.querySelector("#edit-profile-form"),document.querySelector("#add-card-form")),r=(document.querySelector(".content__list"),document.querySelector(".profile__avatar-button")),i=document.querySelector("#edit-profile-button"),n=(document.querySelector("#close-profile-button"),document.querySelector("#add-card-button")),o=(s.querySelector("#create-card-button"),document.querySelector("#close-add-card-button"),document.querySelector("#close-preview-button"),document.querySelector(".profile__image"),document.querySelector(".profile__name"),document.querySelector(".profile__description"),document.querySelector("#preview-image-caption"),document.querySelector("#modal-preview-image"),document.querySelector("#profile-name-input")),a=document.querySelector("#profile-description-input");document.querySelector("#card-title-input"),document.querySelector("#card-link-input");class l{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this.renderer=r,this._selector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.renderer(e)}))}addItem(e){this._selector.prepend(e)}}class d{constructor(e){this._popup=document.querySelector(e)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class c extends d{constructor(e,t){super(e),this._popupForm=this._popup.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._submitButton=this._popup.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}close(){super.close(),this._popupForm.reset()}setButtonText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const{apiToken:u,apiUrl:h}={apiToken:"911f3778-21cb-4f5c-ab83-db0550cf1beb",apiUrl:"https://around-api.en.tripleten-services.com/v1"};let _=null;const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}editUserInfo(e){let{name:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}createCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}({baseUrl:h,headers:{authorization:u,"Content-Type":"application/json"}}),p=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,about:this._descriptionElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}setAvatar(e){this._avatarElement.src=e,this._avatarElement.alt=this._nameElement.textContent}}(".profile__name",".profile__description",".profile__image"),v=e=>{b.setSubmitAction((()=>{b.setButtonText(!0),m.deleteCard(e._cardId).then((()=>{e.deleteCard(),b.close()})).catch((e=>{console.error(e)})).finally((()=>b.setButtonText(!1)))})),b.open()},E=e=>{e._isLiked?m.dislikeCard(e._cardId).then((()=>{e.setLikes(!1)})).catch((e=>{console.error(e)})):m.likeCard(e._cardId).then((()=>{e.setLikes(!0)})).catch((e=>{console.error(e)}))},b=new class extends d{constructor(e){super(e),this._form=this._popup.querySelector(".modal__form"),this._submitButton=this._popup.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setButtonText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){this._form.addEventListener("submit",(()=>{this._handleFormSubmit()})),super.setEventListeners()}}("#delete-modal");b.setEventListeners(),Promise.all([m.getUserInfo(),m.getInitialCards()]).then((e=>{let[t,s]=e;p.setUserInfo({name:t.name,about:t.about}),p.setAvatar(t.avatar),_=new l({items:s,renderer:e=>{_.addItem(k(e,null))}},".content__list"),_.renderItems()})).catch((e=>{console.error(e)}));const S={};var f;f={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(f.formSelector)).forEach((e=>{const s=new t(f,e),r=e.getAttribute("name");S[r]=s,s.enableValidation()})),i.addEventListener("click",(()=>{const e=p.getUserInfo();o.value=e.name,a.value=e.about,g.open(),S["profile-form"].resetValidation()}));const k=(t,s)=>{let{name:r,link:i,_id:n,ownerId:o,isLiked:a}=t;return new e({name:r,link:i,userId:s,_id:n,ownerId:o,isLiked:a,handleImageClick:y,handleDeleteClick:v,handleLikeClick:E,cardSelector:"#card-template"}).getView()},y=e=>{let{name:t,link:s}=e;C.open({name:t,link:s})},L=new c("#edit-avatar-modal",(e=>{L.setButtonText(!0),m.updateAvatar(e).then((e=>{p.setAvatar(e.avatar),L.close()})).catch((e=>{console.error(e)})).finally((()=>L.setButtonText()))}));L.setEventListeners();const C=new class extends d{constructor(e){super(e),this._previewImage=this._popup.querySelector(".modal__preview-image"),this._previewCaption=this._popup.querySelector(".modal__caption")}open(e){let{link:t,name:s}=e;this._previewImage.src=t,this._previewImage.alt=s,this._previewCaption.textContent=s,super.open()}}("#preview-image-modal");C.setEventListeners();const I=new c("#add-card-modal",(e=>{I.setButtonText(!0),m.createCard(e).then((e=>{_.addItem(k(e,null)),I.close()})).catch((e=>{console.error(e)})).finally((()=>I.setButtonText(!1)))}));I.setEventListeners();const g=new c("#edit-profile-modal",(e=>{g.setButtonText(!0),m.editUserInfo(e).then((e=>{p.setUserInfo({name:e.name,about:e.about}),g.close()})).catch((e=>{console.error(e)})).finally((()=>g.setButtonText(!1)))}));g.setEventListeners(),r.addEventListener("click",(()=>{L.open(),S["avatar-form"].resetValidation()})),n.addEventListener("click",(()=>{I.open(),S["card-form"].resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
!function(){"use strict";class e{constructor(e){let{name:t,link:s,userId:r,_id:n,ownerId:i,isLiked:o,handleImageButton:a,handleDeleteButton:l,handleLikeButton:d,cardSelector:c}=e;this._title=t,this._link=s,this._userId=r,this._cardId=n,this._ownerId=i,this._isLiked=o,this._handleImageButton=a,this._handleDeleteButton=l,this._handleLikeButton=d,this._cardSelector=c}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeButton(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageButton({name:this._name,link:this._link})})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteButton(this)))}_renderLikes(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_getCardTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getCardTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._title,this._cardTitleElement.textContent=this._title,this._setEventListeners(),this._renderLikes(),this._cardElement}}class t{constructor(e,t){this._settings=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}hideModalInputError(){this._inputElements.forEach((e=>{e.classList.remove(this._inputErrorClass),this._form.querySelector(`#${e.id}-error`).classList.remove(this._errorClass)}))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}resetButtonState(){this._toggleButtonState()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=(document.querySelector("#card-template").content.querySelector(".card"),document.querySelector("#edit-profile-form")),n=document.querySelector("#add-card-form"),i=(document.querySelector(".content__list"),document.querySelector("#edit-profile-button")),o=(document.querySelector("#close-profile-button"),document.querySelector("#add-card-button")),a=(n.querySelector("#create-card-button"),document.querySelector("#close-add-card-button"),document.querySelector("#close-preview-button"),document.querySelector(".profile__name")),l=document.querySelector(".profile__description");document.querySelector("#preview-image-caption"),document.querySelector("#modal-preview-image"),document.querySelector("#profile-name-input"),document.querySelector("#profile-description-input"),document.querySelector("#card-title-input"),document.querySelector("#card-link-input");class d{constructor(e){let{selector:t}=e;this._popupElement=document.querySelector(t),this._popupCloseButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class c extends d{constructor(e,t){super({selector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}close(){super.close(),this._popupForm.reset()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}const{apiToken:u,apiUrl:h}={apiToken:"3b347dc1-19a4-4ce6-85c4-b495fb569c9b",apiUrl:"https://around-api.en.tripleten-services.com/v1"},_=(new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}updateProfileInfo(e){let{name:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}postCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}({baseUrl:h,headers:{authorization:u,"Content-Type":"application/json"}}),new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._selector=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._selector.prepend(e)}}({items:[{createdAt:"2023-07-05T08:10:57.741Z",isLiked:!1,link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",name:"Yosemite Valley",owner:{about:"Sailor, researcher",avatar:"https://practicum-content.s3.us-west-1.amazonaws.com/frontend-developer/common/avatar.jpg",name:"Jacques Cousteau",_id:"e20537ed11237f86bbb20ccb"},_id:"5d1f0611d321eb4bdcd707dd"},{createdAt:"2023-07-05T08:11:58.324Z",isLiked:!1,link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",name:"Lake Louise",owner:{about:"Sailor, researcher",avatar:"https://practicum-content.s3.us-west-1.amazonaws.com/frontend-developer/common/avatar.jpg",name:"Jacques Cousteau",_id:"e20537ed11237f86bbb20ccb"},_id:"5d1f064ed321eb4bdcd707de"}],renderer:e=>{_.addItem(f(e))}},".content__list"));_.renderItems();const m=new t(s,r),p=new t(s,n);m.enableValidation(),p.enableValidation(),p.resetButtonState();const E=new class{constructor(e,t,s){this._nameElement=e,this._descriptionElement=t,this._avatarElement=s}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._descriptionElement.textContent=t}setAvatar(e){this._avatarElement.src=e,this._avatarElement.alt=this._nameElement.textContent}}(a,l),v=new c("#edit-profile-modal",(e=>{E.setUserInfo(e.name,e.description)})),b=new c("#add-card-modal",(e=>{const t=e.title,s=e.link;_.addItem(f({title:t,link:s}))})),S=new class extends d{constructor(e){super({selector:e}),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._previewCaption=this._popupElement.querySelector(".modal__caption")}open(e){super.open(),this._previewImage.src=e.link,this._previewImage.alt=e.title,this._previewCaption.textContent=e.title}}("#preview-image-modal");function f(t){return new e(t,"#card-template",(()=>{S.open(t)})).getView()}v.setEventListeners(),i.addEventListener("click",(function(){v.open(),v.setInputValues(E.getUserInfo()),m.hideModalInputError(),m.resetButtonState()})),b.setEventListeners(),o.addEventListener("click",(function(){p.resetButtonState(),p.hideModalInputError(),b.open()})),S.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,